---
const today = new Date().toISOString().split("T")[0];
---

<form class="form-user contenedor" id="create-user">
  <div class="display-form">
    <div>
      <label for="name"> Nombre: </label>
      <input
        required
        id="name"
        type="text"
        class="input-element"
        placeholder="Escribe tu nombre"
        name="name"
      />
    </div>

    <div>
      <label for="gender">Sexo:</label>
      <select required name="gender" id="gender" class="input-element">
        <option value="" disabled selected>-- Seleccione --</option>
        <option value="M">Masculino</option>
        <option value="F">Femenino</option>
      </select>
    </div>

    <div>
      <label for="birthDate">Fecha de nacimiento:</label>
      <input
        required
        id="birthDate"
        class="input-element"
        type="date"
        name="birthDate"
        max={today}
      />
    </div>

    <button id="button-form" class="button-submit" type="submit">Crear</button>
  </div>
</form>

<style>
  .form-user {
    max-width: 600px;
    margin-top: 80px;
    background: #ffffff;
    border-radius: 16px;
    box-shadow: 0px 6px 18px rgba(0, 0, 0, 0.1);
    padding: 50px;
  }

  .display-form {
    display: flex;
    flex-direction: column;
  }

  .form-user label {
    font-weight: 600;
    font-size: 20px;
    color: #333;
  }

  .form-user .input-element {
    display: block;
    width: 100%;
    margin-top: 10px;
    padding: 10px 14px;
    margin-bottom: 18px;
    border: 1px solid #ccc;
    border-radius: 8px;
    font-size: 14px;
  }

  .form-user .button-submit {
    padding: 12px;
    font-size: 15px;
    font-weight: 600;
    border: none;
    border-radius: 10px;
    background: rgb(26, 140, 216);
    color: white;
    margin-top: 15px;
    transition: transform 0.3s ease;
  }

  .form-user .button-submit:hover {
    cursor: pointer;
    transform: scale(1.1);
  }
</style>

<script>
  import { routes } from "@/config/routes";

  const form = document.getElementById("create-user") as HTMLFormElement;
  const nameEl = document.getElementById("name") as HTMLInputElement;
  const genderEl = document.getElementById("gender") as HTMLSelectElement;
  const birthDateEl = document.getElementById("birthDate") as HTMLInputElement;
  const buttonSubmit = document.getElementById(
    "button-form"
  ) as HTMLButtonElement;

  const params = new URLSearchParams(window.location.search);
  const action = params.get("action");
  const idParam = params.get("id");

  if (action === "update") {
    nameEl.value = params.get("name") ?? "";
    birthDateEl.value = params.get("birthDate") ?? "";
    genderEl.value = params.get("gender") ?? "";
    buttonSubmit.innerText = "Actualizar";
  }

  form?.addEventListener("submit", async (event) => {
    event.preventDefault();

    const user = {
      id: idParam ? Number(idParam) : undefined,
      name: nameEl.value.trim(),
      gender: genderEl.value,
      birthdate: birthDateEl.value,
    };

    const isUpdate = action === "update";
    const method = isUpdate ? "PUT" : "POST";

    try {
      const response = await fetch(routes.users, {
        method,
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(user),
      });

      const data = await response.json();

      if (!response.ok) {
        console.error(
          `Error en ${isUpdate ? "actualización" : "creación"} de usuario:`,
          data
        );
        alert(`No se pudo ${isUpdate ? "actualizar" : "crear"} el usuario`);
      } else {
        console.log(`Usuario ${isUpdate ? "actualizado" : "creado"}:`, data);
        alert(`Usuario ${isUpdate ? "actualizado" : "creado"} con éxito`);

        window.location.href = "/usuario-consulta";
      }
    } catch (err) {
      console.error(err);
      alert("Error inesperado en la operación");
      window.location.href = window.location.pathname;
    }
  });
</script>
