---
const now = new Date();
const year = now.getFullYear();
const month = (now.getMonth() + 1).toString().padStart(2, "0");
const day = now.getDate().toString().padStart(2, "0");
const dateString = `${year}-${month}-${day}`;
---

<form id="create-user">
  <label>
    Nombre:
    <input
      required
      id="name"
      type="text"
      placeholder="Escribe tu nombre"
      name="name"
      value=""
    />
  </label>

  <div>
    <label for="gender">Sexo:</label>
    <select required name="gender" id="gender">
      <option value="" disabled selected>-- Seleccione --</option>
      <option value="M">Masculino</option>
      <option value="F">Femenino</option>
    </select>
  </div>

  <div>
    <label for="birthDate">Fecha de nacimiento:</label>
    <input
      required
      id="birthDate"
      type="date"
      name="birthDate"
      max={dateString}
    />
  </div>

  <button type="submit">Crear</button>
</form>

<script>
  import { routes } from "@/config/routes";
  const params = new URLSearchParams(window.location.search);
  const action = params.get("action");

  const form = document.getElementById("create-user");

  const nameElement = document.getElementById("name") as HTMLInputElement;
  const genderElement = document.getElementById("gender") as HTMLSelectElement;
  const birthDateElement = document.getElementById(
    "birthDate"
  ) as HTMLInputElement;

  if (action === "update") {
    const idParam = params.get("id");
    const nameParam = params.get("name");
    const birthDateParam = params.get("birthDate");
    const genderParam = params.get("gender");

    if (nameParam !== null) nameElement.value = nameParam;
    if (birthDateParam !== null) birthDateElement.value = birthDateParam;
    if (genderParam !== null) genderElement.value = genderParam;

    form?.addEventListener("submit", (event) => {
      event.preventDefault();

      const id: number = Number(idParam);
      const name = nameElement.value.trim();
      const gender = genderElement.value;
      const birthDate = birthDateElement.value;

      const userForUpdate = {
        id,
        name,
        gender,
        birthdate: birthDate,
      };

      fetch(routes.users, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(userForUpdate),
      })
        .then(async (response) => {
          const data = await response.json();

          if (!response.ok) {
            console.error("Error en la actualizacón de un usuario:", data);
            throw new Error("Error al actualizar el usuario");
          }
        })
        .then((data) => {
          console.log("Usuario actualizado:", data);
          alert("Usuario actualizado con éxito");
          location.reload();
        })
        .catch((error) => {
          location.reload();
          alert("No se pudo actualizar el usuario");
        });
    });
  } else {
    form?.addEventListener("submit", (event) => {
      event.preventDefault();

      const name = (
        document.getElementById("name") as HTMLInputElement
      ).value.trim();
      const gender = (document.getElementById("gender") as HTMLSelectElement)
        .value;
      const birthDate = (
        document.getElementById("birthDate") as HTMLInputElement
      ).value;

      const newUser = {
        name,
        gender,
        birthdate: birthDate,
      };

      fetch(routes.users, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(newUser),
      })
        .then(async (response) => {
          const data = await response.json();

          if (!response.ok) {
            console.error("Error en creación de usuario:", data);
            throw new Error("Error al crear el usuario");
          }
        })
        .then((data) => {
          console.log("Usuario creado:", data);
          alert("Usuario creado con éxito");
          location.reload();
        })
        .catch((error) => {
          location.reload();
          alert("No se pudo crear el usuario");
        });
    });
  }
</script>
