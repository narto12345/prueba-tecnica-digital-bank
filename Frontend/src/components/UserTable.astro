---

---

<section class="grilla contenedor">
  <div class="tabla-contenedor">
    <table id="users-table" class="user-table">
      <thead>
        <tr class="thead">
          <th>Nombre</th>
          <th>Sexo</th>
          <th>Fecha de nacimiento</th>
          <th>Acciones</th>
        </tr>
      </thead>
      <tbody class="tbody"> </tbody>
    </table>
  </div>
</section>

<style is:global>
  .grilla {
    margin-top: 50px;
    display: flex;
    justify-content: center;
  }

  .tabla-contenedor {
    box-shadow: 0px 6px 18px rgba(0, 0, 0, 0.1);
    padding: 50px;
    background: #ffffff;
    border-radius: 16px;
    text-align: center;
    margin-top: 30px;
  }

  .user-table {
    border-collapse: collapse;
  }

  .thead th {
    text-transform: uppercase;
    padding: 20px;
  }

  .tbody tr:nth-child(2n + 1) {
    background-color: rgb(235, 245, 252);
  }

  .td-action {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    margin: 10px;
  }

  .user-table button {
    padding: 10px;
    font-size: 15px;
    font-weight: 600;
    border: none;
    border-radius: 10px;
    background: rgb(26, 140, 216);
    color: white;
    transition: transform 0.3s ease;
  }

  .user-table button:hover {
    cursor: pointer;
    transform: scale(1.1);
  }
</style>

<script>
  import { routes } from "@/config/routes";
  import { type UserGetAll, type User } from "@models/User";

  const table = document.querySelector("table#users-table tbody");

  const loadData = () => {
    fetch(routes.users)
      .then((response) => response.json())
      .then((json) => {
        console.log(json);
        const users: UserGetAll = json;

        if (users.data) AddElements(users.data);
      });
  };

  document.addEventListener("DOMContentLoaded", loadData);

  function AddElements(users: User[]): void {
    if (!users || users.length === 0) {
      const noDataRow = document.createElement("tr");
      const noDataCell = document.createElement("td");
      noDataCell.colSpan = 4;
      noDataCell.textContent = "No existen usuarios creados";
      noDataCell.style.textAlign = "center";
      noDataRow.appendChild(noDataCell);
      table?.appendChild(noDataRow);
      return;
    }

    const rows: HTMLTableRowElement[] = users.map((user) => {
      const newRow = document.createElement("tr");

      const name = document.createElement("td");
      name.textContent = user.name;
      newRow.appendChild(name);

      const gender = document.createElement("td");
      gender.textContent = user.gender;
      newRow.appendChild(gender);

      const birthday = document.createElement("td");
      birthday.textContent = user.birthdate;
      newRow.appendChild(birthday);

      const actionButtons = document.createElement("td");
      actionButtons.classList.add("td-action");

      const updateButton = document.createElement("button");
      updateButton.textContent = "Modificar";

      updateButton.addEventListener("click", () => {
        const url = new URL("http://localhost:4321/usuario");
        url.searchParams.set("action", "update");
        url.searchParams.set("id", user.id.toString());
        url.searchParams.set("name", user.name);
        url.searchParams.set("birthDate", user.birthdate);
        url.searchParams.set("gender", user.gender);

        window.location.href = url.toString();
      });

      const deleteButton = document.createElement("button");
      deleteButton.textContent = "Eliminar";

      deleteButton.addEventListener("click", () => {
        if (confirm(`Â¿Seguro que quieres eliminar a ${user.name}?`)) {
          deleteData(user.id);
        }
      });

      actionButtons.appendChild(updateButton);
      actionButtons.appendChild(deleteButton);

      newRow.appendChild(actionButtons);

      return newRow;
    });

    rows.forEach((row) => table?.appendChild(row));
  }

  const deleteData = (id: number) => {
    fetch(`${routes.users}/${id}`, {
      method: "DELETE",
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error("Error al eliminar el recurso");
        }
        return response.json();
      })
      .then((json) => {
        console.log(json);
        location.reload();
      });
  };
</script>
